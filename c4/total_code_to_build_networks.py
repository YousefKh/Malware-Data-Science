#!/usr/bin/python

# Import required libraries

import networkx as netx
from networkx.drawing.nx_agraph import write_dot

# Instantiate a network with no nodes and no edges.

network = netx.Graph()

# Adding nodes and edges

nodes = ["hello", "world", 1,2,3]

for node in nodes:
    network.add_node(node)

network.add_edge("hello", "world")
network.add_edge(1,2)
network.add_edge(1,3)

# Adding Attributes to nodes

network.add_node(1, myattribute = "foo")

# add attribute after added a node using dictionary
network.node[1]["myattribute"] = "foo"

# access the node dictionary
print network.node[1][["myattribute"] # prints "foo"

# Adding Attributes to edges

network.add_edge("node1", "node2", myattribute = "attribute of an edge")

# add attribute after added a edge using dictionary
network.edge["node1"]["node2"]["myattribute"] = "attribute of an edge"

# using ehe edge dic. to attributes regardless of order
network.edge["node1"]["node2"]["myattribute"] = 321

print network.edge["node2"]["node1"]["myattribute"] # Prints 321


# Saving Networks to disk
write_dot(network, "network.dot")
